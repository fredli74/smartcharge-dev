volumes:
  postgres_data:
    driver: local

x-common-environment: &common-environment
  POSTGRES_URL: ${POSTGRES_URL:-}
  POSTGRES_SSL: ${POSTGRES_SSL:-}
  POSTGRES_CONNECTIONS: ${POSTGRES_CONNECTIONS:-}
  PUBLIC_URL: ${PUBLIC_URL:-}
  SERVER_IP: ${SERVER_IP:-}
  SERVER_PORT: ${SERVER_PORT:-}
  AUTH0_DOMAIN: ${AUTH0_DOMAIN:-}
  AUTH0_CLIENT_ID: ${AUTH0_CLIENT_ID:-}
  TESLA_COMMAND_PROXY: ${TESLA_COMMAND_PROXY:-}
  TESLA_API_BASE_URL: ${TESLA_API_BASE_URL:-}
  TESLA_API_PROXY: ${TESLA_API_PROXY:-}
  TESLA_AUTH_BASE_URL: ${TESLA_AUTH_BASE_URL:-}
  TESLA_AUTH_PROXY: ${TESLA_AUTH_PROXY:-}
  TESLA_CLIENT_ID: ${TESLA_CLIENT_ID:-}
  TESLA_CLIENT_SECRET: ${TESLA_CLIENT_SECRET:-}
  TESLA_TOKEN_EXPIRATION_WINDOW: ${TESLA_TOKEN_EXPIRATION_WINDOW:-}
  TESLA_DEFAULT_MAX_LEVEL: ${TESLA_DEFAULT_MAX_LEVEL:-}
  TESLA_LOWEST_POSSIBLE_CHARGETO: ${TESLA_LOWEST_POSSIBLE_CHARGETO:-}

services:
  postgres:
    image: postgres:15
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql
      - ./deploy/postgres-init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - ./deploy/postgres-entrypoint.sh:/usr/local/bin/custom-entrypoint.sh:ro
    ports:
      - "${POSTGRES_EXT_PORT:-}:5432"
    entrypoint: [ "/bin/sh", "-c", "/usr/local/bin/custom-entrypoint.sh" ]

  server:
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
      target: server
    environment:
      <<: *common-environment
      SINGLE_USER: ${SINGLE_USER:-}
      SINGLE_USER_PASSWORD: ${SINGLE_USER_PASSWORD:-}
      HELP_URL: ${HELP_URL:-}
      GLOBAL_INFO_MESSAGE: ${GLOBAL_INFO_MESSAGE:-}
      GLOBAL_WARNING_MESSAGE: ${GLOBAL_WARNING_MESSAGE:-}
      GLOBAL_ERROR_MESSAGE: ${GLOBAL_ERROR_MESSAGE:-}
      TESLA_TELEMETRY_HOST: ${TESLA_TELEMETRY_HOST:-}
      TESLA_TELEMETRY_PORT: ${TESLA_TELEMETRY_PORT:-}
      TESLA_TELEMETRY_CA: ${TESLA_TELEMETRY_CA:-}
      TESLA_TELEMETRY_KAFKA_BROKER: ${TESLA_TELEMETRY_KAFKA_BROKER:-}

    depends_on:
      - postgres
    ports:
      - "${PORT:-3030}:${SERVER_PORT:-3030}"

  worker:
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
      target: worker
    environment:
      <<: *common-environment
    depends_on:
      - postgres
      - server
